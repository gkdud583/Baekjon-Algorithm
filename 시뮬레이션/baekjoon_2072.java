import java.util.Scanner;public class baekjoon_2072 {  public static final int SIZE = 19;  public static final int OMOK_SIZE = 5;  // 상 하 좌 우 왼*위*대 오*아래*대 오른*위*대 왼*아래*대  public static final int DY[][] = {    {-1, 1},    {0, 0},    {-1, 1},    {-1, 1}  };  public static final int DX[][] = {    {0, 0},    {-1, 1},    {-1, 1},    {1, -1}  };  public static int map[][] = new int[SIZE + 1][SIZE + 1];  public static void main(String[] args) {    Scanner sc = new Scanner(System.in);    int n = sc.nextInt();    boolean isBlack = true;    for (int i = 1; i <= n; i++) {      int y = sc.nextInt();      int x = sc.nextInt();      if (isBlack) {        map[y][x] = 1;      } else {        map[y][x] = 2;      }      if (checkOutcome(y, x, map[y][x])) {        System.out.println(i);        return;      }      isBlack = !isBlack;    }    System.out.println(-1);  }  private static boolean checkOutcome(int y, int x, int color) {    for (int i = 0; i < 4; i++) {      int count =        getCount(y + DY[i][0], x + DX[i][0], color, DY[i][0], DX[i][0]);      count += getCount(y + DY[i][1], x + DX[i][1], color, DY[i][1], DX[i][1]);      if (count + 1 == OMOK_SIZE) {        return true;      }    }    return false;  }  private static int getCount(int y, int x, int color, int dy, int dx) {    if (isOutOfArray(y, x)) {      return 0;    }    if (map[y][x] != color) {      return 0;    }    return getCount(y + dy, x + dx, color, dy, dx) + 1;  }  private static boolean isOutOfArray(int y, int x) {    if (y < 1 || x < 1 || y > SIZE || x > SIZE) {      return true;    }    return false;  }}